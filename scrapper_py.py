# -*- coding: utf-8 -*-
"""scrapper.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10LCvdYOk5PZOp7GzMcq9SSNFW4xPtvuK

FreshersWorld Job Scrapper
"""

import requests
from bs4 import BeautifulSoup
import pandas as pd

def scrape_freshersworld(job_title, location):
    # Format user input for the URL (replace spaces with hyphens)
    job_title_formatted = job_title.strip().replace(' ', '-')
    location_formatted = location.strip().replace(' ', '-')

    # Construct the search URL
    base_url = "https://www.freshersworld.com/jobs/jobsearch/"
    search_url = f"{base_url}{job_title_formatted}-jobs-in-{location_formatted}"

    # Send a GET request
    response = requests.get(search_url)
    if response.status_code != 200:
        print(f'Failed to retrieve data: {response.status_code}')
        return []

    # Parse the HTML content
    soup = BeautifulSoup(response.text, 'html.parser')

    # Find job listings
    job_listings = soup.find_all('div', class_='job-container')

    # Extract job details
    jobs = []
    for job in job_listings:
        title_elem = job.find('span', class_='wrap-title seo_title')
        company_elem = job.find('h3', class_='latest-jobs-title')
        location_elem = job.find('span', class_='job-location')
        posted_date_elem = job.find('span', class_='ago-text')
        salary_elem = job.find('span', class_='qualifications')

        title = title_elem.text.strip() if title_elem else 'N/A'
        company = company_elem.text.strip() if company_elem else 'N/A'
        location = location_elem.text.strip() if location_elem else 'N/A'
        posted_date = posted_date_elem.text.strip() if posted_date_elem else 'N/A'
        salary = salary_elem.text.strip() if salary_elem else 'Not Disclosed'

        jobs.append({
            'Title': title,
            'Company': company,
            'Location': location,
            'Salary': salary,
            'Posted Date': posted_date
        })

    return jobs

def save_to_excel(jobs, filename):
    if jobs:
        df = pd.DataFrame(jobs)
        df.to_excel(filename, index=False)
        print(f'Saved {len(jobs)} jobs to {filename}')
    else:
        print('No jobs found.')

# Example usage
if __name__ == '__main__':
    job_title = input('Enter job title: ')
    location = input('Enter location: ')
    jobs = scrape_freshersworld(job_title, location)
    if jobs:
        save_to_excel(jobs, f'{job_title}_jobs_in_{location}.xlsx')
    else:
        print('No jobs found.')